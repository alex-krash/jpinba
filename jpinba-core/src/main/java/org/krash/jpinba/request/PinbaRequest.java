// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jpinba.proto

package org.krash.jpinba.request;

public final class PinbaRequest {
  private PinbaRequest() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RequestBodyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string hostname = 1;
    /**
     * <code>required string hostname = 1;</code>
     */
    boolean hasHostname();
    /**
     * <code>required string hostname = 1;</code>
     */
    java.lang.String getHostname();
    /**
     * <code>required string hostname = 1;</code>
     */
    com.google.protobuf.ByteString
        getHostnameBytes();

    // required string server_name = 2;
    /**
     * <code>required string server_name = 2;</code>
     */
    boolean hasServerName();
    /**
     * <code>required string server_name = 2;</code>
     */
    java.lang.String getServerName();
    /**
     * <code>required string server_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getServerNameBytes();

    // required string script_name = 3;
    /**
     * <code>required string script_name = 3;</code>
     */
    boolean hasScriptName();
    /**
     * <code>required string script_name = 3;</code>
     */
    java.lang.String getScriptName();
    /**
     * <code>required string script_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getScriptNameBytes();

    // required uint32 request_count = 4;
    /**
     * <code>required uint32 request_count = 4;</code>
     */
    boolean hasRequestCount();
    /**
     * <code>required uint32 request_count = 4;</code>
     */
    int getRequestCount();

    // required uint32 document_size = 5;
    /**
     * <code>required uint32 document_size = 5;</code>
     */
    boolean hasDocumentSize();
    /**
     * <code>required uint32 document_size = 5;</code>
     */
    int getDocumentSize();

    // required uint32 memory_peak = 6;
    /**
     * <code>required uint32 memory_peak = 6;</code>
     */
    boolean hasMemoryPeak();
    /**
     * <code>required uint32 memory_peak = 6;</code>
     */
    int getMemoryPeak();

    // required float request_time = 7;
    /**
     * <code>required float request_time = 7;</code>
     */
    boolean hasRequestTime();
    /**
     * <code>required float request_time = 7;</code>
     */
    float getRequestTime();

    // required float ru_utime = 8;
    /**
     * <code>required float ru_utime = 8;</code>
     */
    boolean hasRuUtime();
    /**
     * <code>required float ru_utime = 8;</code>
     */
    float getRuUtime();

    // required float ru_stime = 9;
    /**
     * <code>required float ru_stime = 9;</code>
     */
    boolean hasRuStime();
    /**
     * <code>required float ru_stime = 9;</code>
     */
    float getRuStime();

    // repeated uint32 timer_hit_count = 10;
    /**
     * <code>repeated uint32 timer_hit_count = 10;</code>
     */
    java.util.List<java.lang.Integer> getTimerHitCountList();
    /**
     * <code>repeated uint32 timer_hit_count = 10;</code>
     */
    int getTimerHitCountCount();
    /**
     * <code>repeated uint32 timer_hit_count = 10;</code>
     */
    int getTimerHitCount(int index);

    // repeated float timer_value = 11;
    /**
     * <code>repeated float timer_value = 11;</code>
     */
    java.util.List<java.lang.Float> getTimerValueList();
    /**
     * <code>repeated float timer_value = 11;</code>
     */
    int getTimerValueCount();
    /**
     * <code>repeated float timer_value = 11;</code>
     */
    float getTimerValue(int index);

    // repeated uint32 timer_tag_count = 12;
    /**
     * <code>repeated uint32 timer_tag_count = 12;</code>
     */
    java.util.List<java.lang.Integer> getTimerTagCountList();
    /**
     * <code>repeated uint32 timer_tag_count = 12;</code>
     */
    int getTimerTagCountCount();
    /**
     * <code>repeated uint32 timer_tag_count = 12;</code>
     */
    int getTimerTagCount(int index);

    // repeated uint32 timer_tag_name = 13;
    /**
     * <code>repeated uint32 timer_tag_name = 13;</code>
     */
    java.util.List<java.lang.Integer> getTimerTagNameList();
    /**
     * <code>repeated uint32 timer_tag_name = 13;</code>
     */
    int getTimerTagNameCount();
    /**
     * <code>repeated uint32 timer_tag_name = 13;</code>
     */
    int getTimerTagName(int index);

    // repeated uint32 timer_tag_value = 14;
    /**
     * <code>repeated uint32 timer_tag_value = 14;</code>
     */
    java.util.List<java.lang.Integer> getTimerTagValueList();
    /**
     * <code>repeated uint32 timer_tag_value = 14;</code>
     */
    int getTimerTagValueCount();
    /**
     * <code>repeated uint32 timer_tag_value = 14;</code>
     */
    int getTimerTagValue(int index);

    // repeated string dictionary = 15;
    /**
     * <code>repeated string dictionary = 15;</code>
     */
    java.util.List<java.lang.String>
    getDictionaryList();
    /**
     * <code>repeated string dictionary = 15;</code>
     */
    int getDictionaryCount();
    /**
     * <code>repeated string dictionary = 15;</code>
     */
    java.lang.String getDictionary(int index);
    /**
     * <code>repeated string dictionary = 15;</code>
     */
    com.google.protobuf.ByteString
        getDictionaryBytes(int index);

    // optional uint32 status = 16;
    /**
     * <code>optional uint32 status = 16;</code>
     */
    boolean hasStatus();
    /**
     * <code>optional uint32 status = 16;</code>
     */
    int getStatus();

    // optional uint32 memory_footprint = 17;
    /**
     * <code>optional uint32 memory_footprint = 17;</code>
     */
    boolean hasMemoryFootprint();
    /**
     * <code>optional uint32 memory_footprint = 17;</code>
     */
    int getMemoryFootprint();

    // repeated .jpinba.RequestBody requests = 18;
    /**
     * <code>repeated .jpinba.RequestBody requests = 18;</code>
     */
    java.util.List<org.krash.jpinba.request.PinbaRequest.RequestBody> 
        getRequestsList();
    /**
     * <code>repeated .jpinba.RequestBody requests = 18;</code>
     */
    org.krash.jpinba.request.PinbaRequest.RequestBody getRequests(int index);
    /**
     * <code>repeated .jpinba.RequestBody requests = 18;</code>
     */
    int getRequestsCount();
    /**
     * <code>repeated .jpinba.RequestBody requests = 18;</code>
     */
    java.util.List<? extends org.krash.jpinba.request.PinbaRequest.RequestBodyOrBuilder> 
        getRequestsOrBuilderList();
    /**
     * <code>repeated .jpinba.RequestBody requests = 18;</code>
     */
    org.krash.jpinba.request.PinbaRequest.RequestBodyOrBuilder getRequestsOrBuilder(
        int index);

    // optional string schema = 19;
    /**
     * <code>optional string schema = 19;</code>
     */
    boolean hasSchema();
    /**
     * <code>optional string schema = 19;</code>
     */
    java.lang.String getSchema();
    /**
     * <code>optional string schema = 19;</code>
     */
    com.google.protobuf.ByteString
        getSchemaBytes();

    // repeated uint32 tag_name = 20;
    /**
     * <code>repeated uint32 tag_name = 20;</code>
     */
    java.util.List<java.lang.Integer> getTagNameList();
    /**
     * <code>repeated uint32 tag_name = 20;</code>
     */
    int getTagNameCount();
    /**
     * <code>repeated uint32 tag_name = 20;</code>
     */
    int getTagName(int index);

    // repeated uint32 tag_value = 21;
    /**
     * <code>repeated uint32 tag_value = 21;</code>
     */
    java.util.List<java.lang.Integer> getTagValueList();
    /**
     * <code>repeated uint32 tag_value = 21;</code>
     */
    int getTagValueCount();
    /**
     * <code>repeated uint32 tag_value = 21;</code>
     */
    int getTagValue(int index);

    // repeated float timer_ru_utime = 22;
    /**
     * <code>repeated float timer_ru_utime = 22;</code>
     */
    java.util.List<java.lang.Float> getTimerRuUtimeList();
    /**
     * <code>repeated float timer_ru_utime = 22;</code>
     */
    int getTimerRuUtimeCount();
    /**
     * <code>repeated float timer_ru_utime = 22;</code>
     */
    float getTimerRuUtime(int index);

    // repeated float timer_ru_stime = 23;
    /**
     * <code>repeated float timer_ru_stime = 23;</code>
     */
    java.util.List<java.lang.Float> getTimerRuStimeList();
    /**
     * <code>repeated float timer_ru_stime = 23;</code>
     */
    int getTimerRuStimeCount();
    /**
     * <code>repeated float timer_ru_stime = 23;</code>
     */
    float getTimerRuStime(int index);
  }
  /**
   * Protobuf type {@code jpinba.RequestBody}
   */
  public static final class RequestBody extends
      com.google.protobuf.GeneratedMessage
      implements RequestBodyOrBuilder {
    // Use RequestBody.newBuilder() to construct.
    private RequestBody(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RequestBody(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RequestBody defaultInstance;
    public static RequestBody getDefaultInstance() {
      return defaultInstance;
    }

    public RequestBody getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RequestBody(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              hostname_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              serverName_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              scriptName_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              requestCount_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              documentSize_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              memoryPeak_ = input.readUInt32();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              requestTime_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              ruUtime_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              ruStime_ = input.readFloat();
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                timerHitCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              timerHitCount_.add(input.readUInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                timerHitCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                timerHitCount_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 93: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                timerValue_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000400;
              }
              timerValue_.add(input.readFloat());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                timerValue_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                timerValue_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                timerTagCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              timerTagCount_.add(input.readUInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                timerTagCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                timerTagCount_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                timerTagName_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              timerTagName_.add(input.readUInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                timerTagName_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                timerTagName_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                timerTagValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              timerTagValue_.add(input.readUInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                timerTagValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                timerTagValue_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                dictionary_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00004000;
              }
              dictionary_.add(input.readBytes());
              break;
            }
            case 128: {
              bitField0_ |= 0x00000200;
              status_ = input.readUInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00000400;
              memoryFootprint_ = input.readUInt32();
              break;
            }
            case 146: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                requests_ = new java.util.ArrayList<org.krash.jpinba.request.PinbaRequest.RequestBody>();
                mutable_bitField0_ |= 0x00020000;
              }
              requests_.add(input.readMessage(org.krash.jpinba.request.PinbaRequest.RequestBody.PARSER, extensionRegistry));
              break;
            }
            case 154: {
              bitField0_ |= 0x00000800;
              schema_ = input.readBytes();
              break;
            }
            case 160: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                tagName_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00080000;
              }
              tagName_.add(input.readUInt32());
              break;
            }
            case 162: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000) && input.getBytesUntilLimit() > 0) {
                tagName_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00080000;
              }
              while (input.getBytesUntilLimit() > 0) {
                tagName_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 168: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                tagValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              tagValue_.add(input.readUInt32());
              break;
            }
            case 170: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
                tagValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              while (input.getBytesUntilLimit() > 0) {
                tagValue_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 181: {
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                timerRuUtime_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00200000;
              }
              timerRuUtime_.add(input.readFloat());
              break;
            }
            case 178: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000) && input.getBytesUntilLimit() > 0) {
                timerRuUtime_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00200000;
              }
              while (input.getBytesUntilLimit() > 0) {
                timerRuUtime_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 189: {
              if (!((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
                timerRuStime_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00400000;
              }
              timerRuStime_.add(input.readFloat());
              break;
            }
            case 186: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00400000) == 0x00400000) && input.getBytesUntilLimit() > 0) {
                timerRuStime_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00400000;
              }
              while (input.getBytesUntilLimit() > 0) {
                timerRuStime_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          timerHitCount_ = java.util.Collections.unmodifiableList(timerHitCount_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          timerValue_ = java.util.Collections.unmodifiableList(timerValue_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          timerTagCount_ = java.util.Collections.unmodifiableList(timerTagCount_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          timerTagName_ = java.util.Collections.unmodifiableList(timerTagName_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          timerTagValue_ = java.util.Collections.unmodifiableList(timerTagValue_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          dictionary_ = new com.google.protobuf.UnmodifiableLazyStringList(dictionary_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          requests_ = java.util.Collections.unmodifiableList(requests_);
        }
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          tagName_ = java.util.Collections.unmodifiableList(tagName_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          tagValue_ = java.util.Collections.unmodifiableList(tagValue_);
        }
        if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
          timerRuUtime_ = java.util.Collections.unmodifiableList(timerRuUtime_);
        }
        if (((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
          timerRuStime_ = java.util.Collections.unmodifiableList(timerRuStime_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.krash.jpinba.request.PinbaRequest.internal_static_jpinba_RequestBody_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.krash.jpinba.request.PinbaRequest.internal_static_jpinba_RequestBody_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.krash.jpinba.request.PinbaRequest.RequestBody.class, org.krash.jpinba.request.PinbaRequest.RequestBody.Builder.class);
    }

    public static com.google.protobuf.Parser<RequestBody> PARSER =
        new com.google.protobuf.AbstractParser<RequestBody>() {
      public RequestBody parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RequestBody(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RequestBody> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string hostname = 1;
    public static final int HOSTNAME_FIELD_NUMBER = 1;
    private java.lang.Object hostname_;
    /**
     * <code>required string hostname = 1;</code>
     */
    public boolean hasHostname() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string hostname = 1;</code>
     */
    public java.lang.String getHostname() {
      java.lang.Object ref = hostname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hostname_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string hostname = 1;</code>
     */
    public com.google.protobuf.ByteString
        getHostnameBytes() {
      java.lang.Object ref = hostname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hostname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string server_name = 2;
    public static final int SERVER_NAME_FIELD_NUMBER = 2;
    private java.lang.Object serverName_;
    /**
     * <code>required string server_name = 2;</code>
     */
    public boolean hasServerName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string server_name = 2;</code>
     */
    public java.lang.String getServerName() {
      java.lang.Object ref = serverName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serverName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string server_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getServerNameBytes() {
      java.lang.Object ref = serverName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serverName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string script_name = 3;
    public static final int SCRIPT_NAME_FIELD_NUMBER = 3;
    private java.lang.Object scriptName_;
    /**
     * <code>required string script_name = 3;</code>
     */
    public boolean hasScriptName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string script_name = 3;</code>
     */
    public java.lang.String getScriptName() {
      java.lang.Object ref = scriptName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          scriptName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string script_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getScriptNameBytes() {
      java.lang.Object ref = scriptName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        scriptName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint32 request_count = 4;
    public static final int REQUEST_COUNT_FIELD_NUMBER = 4;
    private int requestCount_;
    /**
     * <code>required uint32 request_count = 4;</code>
     */
    public boolean hasRequestCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 request_count = 4;</code>
     */
    public int getRequestCount() {
      return requestCount_;
    }

    // required uint32 document_size = 5;
    public static final int DOCUMENT_SIZE_FIELD_NUMBER = 5;
    private int documentSize_;
    /**
     * <code>required uint32 document_size = 5;</code>
     */
    public boolean hasDocumentSize() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 document_size = 5;</code>
     */
    public int getDocumentSize() {
      return documentSize_;
    }

    // required uint32 memory_peak = 6;
    public static final int MEMORY_PEAK_FIELD_NUMBER = 6;
    private int memoryPeak_;
    /**
     * <code>required uint32 memory_peak = 6;</code>
     */
    public boolean hasMemoryPeak() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required uint32 memory_peak = 6;</code>
     */
    public int getMemoryPeak() {
      return memoryPeak_;
    }

    // required float request_time = 7;
    public static final int REQUEST_TIME_FIELD_NUMBER = 7;
    private float requestTime_;
    /**
     * <code>required float request_time = 7;</code>
     */
    public boolean hasRequestTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required float request_time = 7;</code>
     */
    public float getRequestTime() {
      return requestTime_;
    }

    // required float ru_utime = 8;
    public static final int RU_UTIME_FIELD_NUMBER = 8;
    private float ruUtime_;
    /**
     * <code>required float ru_utime = 8;</code>
     */
    public boolean hasRuUtime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required float ru_utime = 8;</code>
     */
    public float getRuUtime() {
      return ruUtime_;
    }

    // required float ru_stime = 9;
    public static final int RU_STIME_FIELD_NUMBER = 9;
    private float ruStime_;
    /**
     * <code>required float ru_stime = 9;</code>
     */
    public boolean hasRuStime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required float ru_stime = 9;</code>
     */
    public float getRuStime() {
      return ruStime_;
    }

    // repeated uint32 timer_hit_count = 10;
    public static final int TIMER_HIT_COUNT_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> timerHitCount_;
    /**
     * <code>repeated uint32 timer_hit_count = 10;</code>
     */
    public java.util.List<java.lang.Integer>
        getTimerHitCountList() {
      return timerHitCount_;
    }
    /**
     * <code>repeated uint32 timer_hit_count = 10;</code>
     */
    public int getTimerHitCountCount() {
      return timerHitCount_.size();
    }
    /**
     * <code>repeated uint32 timer_hit_count = 10;</code>
     */
    public int getTimerHitCount(int index) {
      return timerHitCount_.get(index);
    }

    // repeated float timer_value = 11;
    public static final int TIMER_VALUE_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Float> timerValue_;
    /**
     * <code>repeated float timer_value = 11;</code>
     */
    public java.util.List<java.lang.Float>
        getTimerValueList() {
      return timerValue_;
    }
    /**
     * <code>repeated float timer_value = 11;</code>
     */
    public int getTimerValueCount() {
      return timerValue_.size();
    }
    /**
     * <code>repeated float timer_value = 11;</code>
     */
    public float getTimerValue(int index) {
      return timerValue_.get(index);
    }

    // repeated uint32 timer_tag_count = 12;
    public static final int TIMER_TAG_COUNT_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> timerTagCount_;
    /**
     * <code>repeated uint32 timer_tag_count = 12;</code>
     */
    public java.util.List<java.lang.Integer>
        getTimerTagCountList() {
      return timerTagCount_;
    }
    /**
     * <code>repeated uint32 timer_tag_count = 12;</code>
     */
    public int getTimerTagCountCount() {
      return timerTagCount_.size();
    }
    /**
     * <code>repeated uint32 timer_tag_count = 12;</code>
     */
    public int getTimerTagCount(int index) {
      return timerTagCount_.get(index);
    }

    // repeated uint32 timer_tag_name = 13;
    public static final int TIMER_TAG_NAME_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> timerTagName_;
    /**
     * <code>repeated uint32 timer_tag_name = 13;</code>
     */
    public java.util.List<java.lang.Integer>
        getTimerTagNameList() {
      return timerTagName_;
    }
    /**
     * <code>repeated uint32 timer_tag_name = 13;</code>
     */
    public int getTimerTagNameCount() {
      return timerTagName_.size();
    }
    /**
     * <code>repeated uint32 timer_tag_name = 13;</code>
     */
    public int getTimerTagName(int index) {
      return timerTagName_.get(index);
    }

    // repeated uint32 timer_tag_value = 14;
    public static final int TIMER_TAG_VALUE_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> timerTagValue_;
    /**
     * <code>repeated uint32 timer_tag_value = 14;</code>
     */
    public java.util.List<java.lang.Integer>
        getTimerTagValueList() {
      return timerTagValue_;
    }
    /**
     * <code>repeated uint32 timer_tag_value = 14;</code>
     */
    public int getTimerTagValueCount() {
      return timerTagValue_.size();
    }
    /**
     * <code>repeated uint32 timer_tag_value = 14;</code>
     */
    public int getTimerTagValue(int index) {
      return timerTagValue_.get(index);
    }

    // repeated string dictionary = 15;
    public static final int DICTIONARY_FIELD_NUMBER = 15;
    private com.google.protobuf.LazyStringList dictionary_;
    /**
     * <code>repeated string dictionary = 15;</code>
     */
    public java.util.List<java.lang.String>
        getDictionaryList() {
      return dictionary_;
    }
    /**
     * <code>repeated string dictionary = 15;</code>
     */
    public int getDictionaryCount() {
      return dictionary_.size();
    }
    /**
     * <code>repeated string dictionary = 15;</code>
     */
    public java.lang.String getDictionary(int index) {
      return dictionary_.get(index);
    }
    /**
     * <code>repeated string dictionary = 15;</code>
     */
    public com.google.protobuf.ByteString
        getDictionaryBytes(int index) {
      return dictionary_.getByteString(index);
    }

    // optional uint32 status = 16;
    public static final int STATUS_FIELD_NUMBER = 16;
    private int status_;
    /**
     * <code>optional uint32 status = 16;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 status = 16;</code>
     */
    public int getStatus() {
      return status_;
    }

    // optional uint32 memory_footprint = 17;
    public static final int MEMORY_FOOTPRINT_FIELD_NUMBER = 17;
    private int memoryFootprint_;
    /**
     * <code>optional uint32 memory_footprint = 17;</code>
     */
    public boolean hasMemoryFootprint() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 memory_footprint = 17;</code>
     */
    public int getMemoryFootprint() {
      return memoryFootprint_;
    }

    // repeated .jpinba.RequestBody requests = 18;
    public static final int REQUESTS_FIELD_NUMBER = 18;
    private java.util.List<org.krash.jpinba.request.PinbaRequest.RequestBody> requests_;
    /**
     * <code>repeated .jpinba.RequestBody requests = 18;</code>
     */
    public java.util.List<org.krash.jpinba.request.PinbaRequest.RequestBody> getRequestsList() {
      return requests_;
    }
    /**
     * <code>repeated .jpinba.RequestBody requests = 18;</code>
     */
    public java.util.List<? extends org.krash.jpinba.request.PinbaRequest.RequestBodyOrBuilder> 
        getRequestsOrBuilderList() {
      return requests_;
    }
    /**
     * <code>repeated .jpinba.RequestBody requests = 18;</code>
     */
    public int getRequestsCount() {
      return requests_.size();
    }
    /**
     * <code>repeated .jpinba.RequestBody requests = 18;</code>
     */
    public org.krash.jpinba.request.PinbaRequest.RequestBody getRequests(int index) {
      return requests_.get(index);
    }
    /**
     * <code>repeated .jpinba.RequestBody requests = 18;</code>
     */
    public org.krash.jpinba.request.PinbaRequest.RequestBodyOrBuilder getRequestsOrBuilder(
        int index) {
      return requests_.get(index);
    }

    // optional string schema = 19;
    public static final int SCHEMA_FIELD_NUMBER = 19;
    private java.lang.Object schema_;
    /**
     * <code>optional string schema = 19;</code>
     */
    public boolean hasSchema() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string schema = 19;</code>
     */
    public java.lang.String getSchema() {
      java.lang.Object ref = schema_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          schema_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string schema = 19;</code>
     */
    public com.google.protobuf.ByteString
        getSchemaBytes() {
      java.lang.Object ref = schema_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        schema_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated uint32 tag_name = 20;
    public static final int TAG_NAME_FIELD_NUMBER = 20;
    private java.util.List<java.lang.Integer> tagName_;
    /**
     * <code>repeated uint32 tag_name = 20;</code>
     */
    public java.util.List<java.lang.Integer>
        getTagNameList() {
      return tagName_;
    }
    /**
     * <code>repeated uint32 tag_name = 20;</code>
     */
    public int getTagNameCount() {
      return tagName_.size();
    }
    /**
     * <code>repeated uint32 tag_name = 20;</code>
     */
    public int getTagName(int index) {
      return tagName_.get(index);
    }

    // repeated uint32 tag_value = 21;
    public static final int TAG_VALUE_FIELD_NUMBER = 21;
    private java.util.List<java.lang.Integer> tagValue_;
    /**
     * <code>repeated uint32 tag_value = 21;</code>
     */
    public java.util.List<java.lang.Integer>
        getTagValueList() {
      return tagValue_;
    }
    /**
     * <code>repeated uint32 tag_value = 21;</code>
     */
    public int getTagValueCount() {
      return tagValue_.size();
    }
    /**
     * <code>repeated uint32 tag_value = 21;</code>
     */
    public int getTagValue(int index) {
      return tagValue_.get(index);
    }

    // repeated float timer_ru_utime = 22;
    public static final int TIMER_RU_UTIME_FIELD_NUMBER = 22;
    private java.util.List<java.lang.Float> timerRuUtime_;
    /**
     * <code>repeated float timer_ru_utime = 22;</code>
     */
    public java.util.List<java.lang.Float>
        getTimerRuUtimeList() {
      return timerRuUtime_;
    }
    /**
     * <code>repeated float timer_ru_utime = 22;</code>
     */
    public int getTimerRuUtimeCount() {
      return timerRuUtime_.size();
    }
    /**
     * <code>repeated float timer_ru_utime = 22;</code>
     */
    public float getTimerRuUtime(int index) {
      return timerRuUtime_.get(index);
    }

    // repeated float timer_ru_stime = 23;
    public static final int TIMER_RU_STIME_FIELD_NUMBER = 23;
    private java.util.List<java.lang.Float> timerRuStime_;
    /**
     * <code>repeated float timer_ru_stime = 23;</code>
     */
    public java.util.List<java.lang.Float>
        getTimerRuStimeList() {
      return timerRuStime_;
    }
    /**
     * <code>repeated float timer_ru_stime = 23;</code>
     */
    public int getTimerRuStimeCount() {
      return timerRuStime_.size();
    }
    /**
     * <code>repeated float timer_ru_stime = 23;</code>
     */
    public float getTimerRuStime(int index) {
      return timerRuStime_.get(index);
    }

    private void initFields() {
      hostname_ = "";
      serverName_ = "";
      scriptName_ = "";
      requestCount_ = 0;
      documentSize_ = 0;
      memoryPeak_ = 0;
      requestTime_ = 0F;
      ruUtime_ = 0F;
      ruStime_ = 0F;
      timerHitCount_ = java.util.Collections.emptyList();
      timerValue_ = java.util.Collections.emptyList();
      timerTagCount_ = java.util.Collections.emptyList();
      timerTagName_ = java.util.Collections.emptyList();
      timerTagValue_ = java.util.Collections.emptyList();
      dictionary_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      status_ = 0;
      memoryFootprint_ = 0;
      requests_ = java.util.Collections.emptyList();
      schema_ = "";
      tagName_ = java.util.Collections.emptyList();
      tagValue_ = java.util.Collections.emptyList();
      timerRuUtime_ = java.util.Collections.emptyList();
      timerRuStime_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasHostname()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServerName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasScriptName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequestCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDocumentSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMemoryPeak()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequestTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRuUtime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRuStime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRequestsCount(); i++) {
        if (!getRequests(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getHostnameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getServerNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getScriptNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, requestCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, documentSize_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, memoryPeak_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, requestTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, ruUtime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, ruStime_);
      }
      for (int i = 0; i < timerHitCount_.size(); i++) {
        output.writeUInt32(10, timerHitCount_.get(i));
      }
      for (int i = 0; i < timerValue_.size(); i++) {
        output.writeFloat(11, timerValue_.get(i));
      }
      for (int i = 0; i < timerTagCount_.size(); i++) {
        output.writeUInt32(12, timerTagCount_.get(i));
      }
      for (int i = 0; i < timerTagName_.size(); i++) {
        output.writeUInt32(13, timerTagName_.get(i));
      }
      for (int i = 0; i < timerTagValue_.size(); i++) {
        output.writeUInt32(14, timerTagValue_.get(i));
      }
      for (int i = 0; i < dictionary_.size(); i++) {
        output.writeBytes(15, dictionary_.getByteString(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(16, status_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(17, memoryFootprint_);
      }
      for (int i = 0; i < requests_.size(); i++) {
        output.writeMessage(18, requests_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(19, getSchemaBytes());
      }
      for (int i = 0; i < tagName_.size(); i++) {
        output.writeUInt32(20, tagName_.get(i));
      }
      for (int i = 0; i < tagValue_.size(); i++) {
        output.writeUInt32(21, tagValue_.get(i));
      }
      for (int i = 0; i < timerRuUtime_.size(); i++) {
        output.writeFloat(22, timerRuUtime_.get(i));
      }
      for (int i = 0; i < timerRuStime_.size(); i++) {
        output.writeFloat(23, timerRuStime_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getHostnameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getServerNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getScriptNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, requestCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, documentSize_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, memoryPeak_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, requestTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, ruUtime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, ruStime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < timerHitCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(timerHitCount_.get(i));
        }
        size += dataSize;
        size += 1 * getTimerHitCountList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getTimerValueList().size();
        size += dataSize;
        size += 1 * getTimerValueList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < timerTagCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(timerTagCount_.get(i));
        }
        size += dataSize;
        size += 1 * getTimerTagCountList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < timerTagName_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(timerTagName_.get(i));
        }
        size += dataSize;
        size += 1 * getTimerTagNameList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < timerTagValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(timerTagValue_.get(i));
        }
        size += dataSize;
        size += 1 * getTimerTagValueList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dictionary_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(dictionary_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getDictionaryList().size();
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, status_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, memoryFootprint_);
      }
      for (int i = 0; i < requests_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, requests_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(19, getSchemaBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tagName_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(tagName_.get(i));
        }
        size += dataSize;
        size += 2 * getTagNameList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tagValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(tagValue_.get(i));
        }
        size += dataSize;
        size += 2 * getTagValueList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getTimerRuUtimeList().size();
        size += dataSize;
        size += 2 * getTimerRuUtimeList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getTimerRuStimeList().size();
        size += dataSize;
        size += 2 * getTimerRuStimeList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.krash.jpinba.request.PinbaRequest.RequestBody parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.krash.jpinba.request.PinbaRequest.RequestBody parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.krash.jpinba.request.PinbaRequest.RequestBody parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.krash.jpinba.request.PinbaRequest.RequestBody parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.krash.jpinba.request.PinbaRequest.RequestBody parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.krash.jpinba.request.PinbaRequest.RequestBody parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.krash.jpinba.request.PinbaRequest.RequestBody parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.krash.jpinba.request.PinbaRequest.RequestBody parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.krash.jpinba.request.PinbaRequest.RequestBody parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.krash.jpinba.request.PinbaRequest.RequestBody parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.krash.jpinba.request.PinbaRequest.RequestBody prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code jpinba.RequestBody}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.krash.jpinba.request.PinbaRequest.RequestBodyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.krash.jpinba.request.PinbaRequest.internal_static_jpinba_RequestBody_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.krash.jpinba.request.PinbaRequest.internal_static_jpinba_RequestBody_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.krash.jpinba.request.PinbaRequest.RequestBody.class, org.krash.jpinba.request.PinbaRequest.RequestBody.Builder.class);
      }

      // Construct using org.krash.jpinba.request.PinbaRequest.RequestBody.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRequestsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        hostname_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        serverName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        scriptName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        requestCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        documentSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        memoryPeak_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        requestTime_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        ruUtime_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        ruStime_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        timerHitCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        timerValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        timerTagCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        timerTagName_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        timerTagValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        dictionary_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00004000);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        memoryFootprint_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        if (requestsBuilder_ == null) {
          requests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
        } else {
          requestsBuilder_.clear();
        }
        schema_ = "";
        bitField0_ = (bitField0_ & ~0x00040000);
        tagName_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00080000);
        tagValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        timerRuUtime_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00200000);
        timerRuStime_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.krash.jpinba.request.PinbaRequest.internal_static_jpinba_RequestBody_descriptor;
      }

      public org.krash.jpinba.request.PinbaRequest.RequestBody getDefaultInstanceForType() {
        return org.krash.jpinba.request.PinbaRequest.RequestBody.getDefaultInstance();
      }

      public org.krash.jpinba.request.PinbaRequest.RequestBody build() {
        org.krash.jpinba.request.PinbaRequest.RequestBody result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.krash.jpinba.request.PinbaRequest.RequestBody buildPartial() {
        org.krash.jpinba.request.PinbaRequest.RequestBody result = new org.krash.jpinba.request.PinbaRequest.RequestBody(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hostname_ = hostname_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.serverName_ = serverName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.scriptName_ = scriptName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.requestCount_ = requestCount_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.documentSize_ = documentSize_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.memoryPeak_ = memoryPeak_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.requestTime_ = requestTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.ruUtime_ = ruUtime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.ruStime_ = ruStime_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          timerHitCount_ = java.util.Collections.unmodifiableList(timerHitCount_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.timerHitCount_ = timerHitCount_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          timerValue_ = java.util.Collections.unmodifiableList(timerValue_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.timerValue_ = timerValue_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          timerTagCount_ = java.util.Collections.unmodifiableList(timerTagCount_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.timerTagCount_ = timerTagCount_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          timerTagName_ = java.util.Collections.unmodifiableList(timerTagName_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.timerTagName_ = timerTagName_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          timerTagValue_ = java.util.Collections.unmodifiableList(timerTagValue_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.timerTagValue_ = timerTagValue_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          dictionary_ = new com.google.protobuf.UnmodifiableLazyStringList(
              dictionary_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.dictionary_ = dictionary_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.memoryFootprint_ = memoryFootprint_;
        if (requestsBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000)) {
            requests_ = java.util.Collections.unmodifiableList(requests_);
            bitField0_ = (bitField0_ & ~0x00020000);
          }
          result.requests_ = requests_;
        } else {
          result.requests_ = requestsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.schema_ = schema_;
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          tagName_ = java.util.Collections.unmodifiableList(tagName_);
          bitField0_ = (bitField0_ & ~0x00080000);
        }
        result.tagName_ = tagName_;
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          tagValue_ = java.util.Collections.unmodifiableList(tagValue_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.tagValue_ = tagValue_;
        if (((bitField0_ & 0x00200000) == 0x00200000)) {
          timerRuUtime_ = java.util.Collections.unmodifiableList(timerRuUtime_);
          bitField0_ = (bitField0_ & ~0x00200000);
        }
        result.timerRuUtime_ = timerRuUtime_;
        if (((bitField0_ & 0x00400000) == 0x00400000)) {
          timerRuStime_ = java.util.Collections.unmodifiableList(timerRuStime_);
          bitField0_ = (bitField0_ & ~0x00400000);
        }
        result.timerRuStime_ = timerRuStime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.krash.jpinba.request.PinbaRequest.RequestBody) {
          return mergeFrom((org.krash.jpinba.request.PinbaRequest.RequestBody)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.krash.jpinba.request.PinbaRequest.RequestBody other) {
        if (other == org.krash.jpinba.request.PinbaRequest.RequestBody.getDefaultInstance()) return this;
        if (other.hasHostname()) {
          bitField0_ |= 0x00000001;
          hostname_ = other.hostname_;
          onChanged();
        }
        if (other.hasServerName()) {
          bitField0_ |= 0x00000002;
          serverName_ = other.serverName_;
          onChanged();
        }
        if (other.hasScriptName()) {
          bitField0_ |= 0x00000004;
          scriptName_ = other.scriptName_;
          onChanged();
        }
        if (other.hasRequestCount()) {
          setRequestCount(other.getRequestCount());
        }
        if (other.hasDocumentSize()) {
          setDocumentSize(other.getDocumentSize());
        }
        if (other.hasMemoryPeak()) {
          setMemoryPeak(other.getMemoryPeak());
        }
        if (other.hasRequestTime()) {
          setRequestTime(other.getRequestTime());
        }
        if (other.hasRuUtime()) {
          setRuUtime(other.getRuUtime());
        }
        if (other.hasRuStime()) {
          setRuStime(other.getRuStime());
        }
        if (!other.timerHitCount_.isEmpty()) {
          if (timerHitCount_.isEmpty()) {
            timerHitCount_ = other.timerHitCount_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureTimerHitCountIsMutable();
            timerHitCount_.addAll(other.timerHitCount_);
          }
          onChanged();
        }
        if (!other.timerValue_.isEmpty()) {
          if (timerValue_.isEmpty()) {
            timerValue_ = other.timerValue_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureTimerValueIsMutable();
            timerValue_.addAll(other.timerValue_);
          }
          onChanged();
        }
        if (!other.timerTagCount_.isEmpty()) {
          if (timerTagCount_.isEmpty()) {
            timerTagCount_ = other.timerTagCount_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureTimerTagCountIsMutable();
            timerTagCount_.addAll(other.timerTagCount_);
          }
          onChanged();
        }
        if (!other.timerTagName_.isEmpty()) {
          if (timerTagName_.isEmpty()) {
            timerTagName_ = other.timerTagName_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureTimerTagNameIsMutable();
            timerTagName_.addAll(other.timerTagName_);
          }
          onChanged();
        }
        if (!other.timerTagValue_.isEmpty()) {
          if (timerTagValue_.isEmpty()) {
            timerTagValue_ = other.timerTagValue_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureTimerTagValueIsMutable();
            timerTagValue_.addAll(other.timerTagValue_);
          }
          onChanged();
        }
        if (!other.dictionary_.isEmpty()) {
          if (dictionary_.isEmpty()) {
            dictionary_ = other.dictionary_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureDictionaryIsMutable();
            dictionary_.addAll(other.dictionary_);
          }
          onChanged();
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasMemoryFootprint()) {
          setMemoryFootprint(other.getMemoryFootprint());
        }
        if (requestsBuilder_ == null) {
          if (!other.requests_.isEmpty()) {
            if (requests_.isEmpty()) {
              requests_ = other.requests_;
              bitField0_ = (bitField0_ & ~0x00020000);
            } else {
              ensureRequestsIsMutable();
              requests_.addAll(other.requests_);
            }
            onChanged();
          }
        } else {
          if (!other.requests_.isEmpty()) {
            if (requestsBuilder_.isEmpty()) {
              requestsBuilder_.dispose();
              requestsBuilder_ = null;
              requests_ = other.requests_;
              bitField0_ = (bitField0_ & ~0x00020000);
              requestsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRequestsFieldBuilder() : null;
            } else {
              requestsBuilder_.addAllMessages(other.requests_);
            }
          }
        }
        if (other.hasSchema()) {
          bitField0_ |= 0x00040000;
          schema_ = other.schema_;
          onChanged();
        }
        if (!other.tagName_.isEmpty()) {
          if (tagName_.isEmpty()) {
            tagName_ = other.tagName_;
            bitField0_ = (bitField0_ & ~0x00080000);
          } else {
            ensureTagNameIsMutable();
            tagName_.addAll(other.tagName_);
          }
          onChanged();
        }
        if (!other.tagValue_.isEmpty()) {
          if (tagValue_.isEmpty()) {
            tagValue_ = other.tagValue_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureTagValueIsMutable();
            tagValue_.addAll(other.tagValue_);
          }
          onChanged();
        }
        if (!other.timerRuUtime_.isEmpty()) {
          if (timerRuUtime_.isEmpty()) {
            timerRuUtime_ = other.timerRuUtime_;
            bitField0_ = (bitField0_ & ~0x00200000);
          } else {
            ensureTimerRuUtimeIsMutable();
            timerRuUtime_.addAll(other.timerRuUtime_);
          }
          onChanged();
        }
        if (!other.timerRuStime_.isEmpty()) {
          if (timerRuStime_.isEmpty()) {
            timerRuStime_ = other.timerRuStime_;
            bitField0_ = (bitField0_ & ~0x00400000);
          } else {
            ensureTimerRuStimeIsMutable();
            timerRuStime_.addAll(other.timerRuStime_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHostname()) {
          
          return false;
        }
        if (!hasServerName()) {
          
          return false;
        }
        if (!hasScriptName()) {
          
          return false;
        }
        if (!hasRequestCount()) {
          
          return false;
        }
        if (!hasDocumentSize()) {
          
          return false;
        }
        if (!hasMemoryPeak()) {
          
          return false;
        }
        if (!hasRequestTime()) {
          
          return false;
        }
        if (!hasRuUtime()) {
          
          return false;
        }
        if (!hasRuStime()) {
          
          return false;
        }
        for (int i = 0; i < getRequestsCount(); i++) {
          if (!getRequests(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.krash.jpinba.request.PinbaRequest.RequestBody parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.krash.jpinba.request.PinbaRequest.RequestBody) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string hostname = 1;
      private java.lang.Object hostname_ = "";
      /**
       * <code>required string hostname = 1;</code>
       */
      public boolean hasHostname() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string hostname = 1;</code>
       */
      public java.lang.String getHostname() {
        java.lang.Object ref = hostname_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          hostname_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string hostname = 1;</code>
       */
      public com.google.protobuf.ByteString
          getHostnameBytes() {
        java.lang.Object ref = hostname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hostname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string hostname = 1;</code>
       */
      public Builder setHostname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        hostname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string hostname = 1;</code>
       */
      public Builder clearHostname() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hostname_ = getDefaultInstance().getHostname();
        onChanged();
        return this;
      }
      /**
       * <code>required string hostname = 1;</code>
       */
      public Builder setHostnameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        hostname_ = value;
        onChanged();
        return this;
      }

      // required string server_name = 2;
      private java.lang.Object serverName_ = "";
      /**
       * <code>required string server_name = 2;</code>
       */
      public boolean hasServerName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string server_name = 2;</code>
       */
      public java.lang.String getServerName() {
        java.lang.Object ref = serverName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          serverName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string server_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getServerNameBytes() {
        java.lang.Object ref = serverName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serverName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string server_name = 2;</code>
       */
      public Builder setServerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        serverName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string server_name = 2;</code>
       */
      public Builder clearServerName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        serverName_ = getDefaultInstance().getServerName();
        onChanged();
        return this;
      }
      /**
       * <code>required string server_name = 2;</code>
       */
      public Builder setServerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        serverName_ = value;
        onChanged();
        return this;
      }

      // required string script_name = 3;
      private java.lang.Object scriptName_ = "";
      /**
       * <code>required string script_name = 3;</code>
       */
      public boolean hasScriptName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string script_name = 3;</code>
       */
      public java.lang.String getScriptName() {
        java.lang.Object ref = scriptName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          scriptName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string script_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getScriptNameBytes() {
        java.lang.Object ref = scriptName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          scriptName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string script_name = 3;</code>
       */
      public Builder setScriptName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        scriptName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string script_name = 3;</code>
       */
      public Builder clearScriptName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        scriptName_ = getDefaultInstance().getScriptName();
        onChanged();
        return this;
      }
      /**
       * <code>required string script_name = 3;</code>
       */
      public Builder setScriptNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        scriptName_ = value;
        onChanged();
        return this;
      }

      // required uint32 request_count = 4;
      private int requestCount_ ;
      /**
       * <code>required uint32 request_count = 4;</code>
       */
      public boolean hasRequestCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 request_count = 4;</code>
       */
      public int getRequestCount() {
        return requestCount_;
      }
      /**
       * <code>required uint32 request_count = 4;</code>
       */
      public Builder setRequestCount(int value) {
        bitField0_ |= 0x00000008;
        requestCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 request_count = 4;</code>
       */
      public Builder clearRequestCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        requestCount_ = 0;
        onChanged();
        return this;
      }

      // required uint32 document_size = 5;
      private int documentSize_ ;
      /**
       * <code>required uint32 document_size = 5;</code>
       */
      public boolean hasDocumentSize() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 document_size = 5;</code>
       */
      public int getDocumentSize() {
        return documentSize_;
      }
      /**
       * <code>required uint32 document_size = 5;</code>
       */
      public Builder setDocumentSize(int value) {
        bitField0_ |= 0x00000010;
        documentSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 document_size = 5;</code>
       */
      public Builder clearDocumentSize() {
        bitField0_ = (bitField0_ & ~0x00000010);
        documentSize_ = 0;
        onChanged();
        return this;
      }

      // required uint32 memory_peak = 6;
      private int memoryPeak_ ;
      /**
       * <code>required uint32 memory_peak = 6;</code>
       */
      public boolean hasMemoryPeak() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required uint32 memory_peak = 6;</code>
       */
      public int getMemoryPeak() {
        return memoryPeak_;
      }
      /**
       * <code>required uint32 memory_peak = 6;</code>
       */
      public Builder setMemoryPeak(int value) {
        bitField0_ |= 0x00000020;
        memoryPeak_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 memory_peak = 6;</code>
       */
      public Builder clearMemoryPeak() {
        bitField0_ = (bitField0_ & ~0x00000020);
        memoryPeak_ = 0;
        onChanged();
        return this;
      }

      // required float request_time = 7;
      private float requestTime_ ;
      /**
       * <code>required float request_time = 7;</code>
       */
      public boolean hasRequestTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required float request_time = 7;</code>
       */
      public float getRequestTime() {
        return requestTime_;
      }
      /**
       * <code>required float request_time = 7;</code>
       */
      public Builder setRequestTime(float value) {
        bitField0_ |= 0x00000040;
        requestTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float request_time = 7;</code>
       */
      public Builder clearRequestTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        requestTime_ = 0F;
        onChanged();
        return this;
      }

      // required float ru_utime = 8;
      private float ruUtime_ ;
      /**
       * <code>required float ru_utime = 8;</code>
       */
      public boolean hasRuUtime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required float ru_utime = 8;</code>
       */
      public float getRuUtime() {
        return ruUtime_;
      }
      /**
       * <code>required float ru_utime = 8;</code>
       */
      public Builder setRuUtime(float value) {
        bitField0_ |= 0x00000080;
        ruUtime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float ru_utime = 8;</code>
       */
      public Builder clearRuUtime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        ruUtime_ = 0F;
        onChanged();
        return this;
      }

      // required float ru_stime = 9;
      private float ruStime_ ;
      /**
       * <code>required float ru_stime = 9;</code>
       */
      public boolean hasRuStime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required float ru_stime = 9;</code>
       */
      public float getRuStime() {
        return ruStime_;
      }
      /**
       * <code>required float ru_stime = 9;</code>
       */
      public Builder setRuStime(float value) {
        bitField0_ |= 0x00000100;
        ruStime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float ru_stime = 9;</code>
       */
      public Builder clearRuStime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        ruStime_ = 0F;
        onChanged();
        return this;
      }

      // repeated uint32 timer_hit_count = 10;
      private java.util.List<java.lang.Integer> timerHitCount_ = java.util.Collections.emptyList();
      private void ensureTimerHitCountIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          timerHitCount_ = new java.util.ArrayList<java.lang.Integer>(timerHitCount_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated uint32 timer_hit_count = 10;</code>
       */
      public java.util.List<java.lang.Integer>
          getTimerHitCountList() {
        return java.util.Collections.unmodifiableList(timerHitCount_);
      }
      /**
       * <code>repeated uint32 timer_hit_count = 10;</code>
       */
      public int getTimerHitCountCount() {
        return timerHitCount_.size();
      }
      /**
       * <code>repeated uint32 timer_hit_count = 10;</code>
       */
      public int getTimerHitCount(int index) {
        return timerHitCount_.get(index);
      }
      /**
       * <code>repeated uint32 timer_hit_count = 10;</code>
       */
      public Builder setTimerHitCount(
          int index, int value) {
        ensureTimerHitCountIsMutable();
        timerHitCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 timer_hit_count = 10;</code>
       */
      public Builder addTimerHitCount(int value) {
        ensureTimerHitCountIsMutable();
        timerHitCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 timer_hit_count = 10;</code>
       */
      public Builder addAllTimerHitCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTimerHitCountIsMutable();
        super.addAll(values, timerHitCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 timer_hit_count = 10;</code>
       */
      public Builder clearTimerHitCount() {
        timerHitCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // repeated float timer_value = 11;
      private java.util.List<java.lang.Float> timerValue_ = java.util.Collections.emptyList();
      private void ensureTimerValueIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          timerValue_ = new java.util.ArrayList<java.lang.Float>(timerValue_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated float timer_value = 11;</code>
       */
      public java.util.List<java.lang.Float>
          getTimerValueList() {
        return java.util.Collections.unmodifiableList(timerValue_);
      }
      /**
       * <code>repeated float timer_value = 11;</code>
       */
      public int getTimerValueCount() {
        return timerValue_.size();
      }
      /**
       * <code>repeated float timer_value = 11;</code>
       */
      public float getTimerValue(int index) {
        return timerValue_.get(index);
      }
      /**
       * <code>repeated float timer_value = 11;</code>
       */
      public Builder setTimerValue(
          int index, float value) {
        ensureTimerValueIsMutable();
        timerValue_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float timer_value = 11;</code>
       */
      public Builder addTimerValue(float value) {
        ensureTimerValueIsMutable();
        timerValue_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float timer_value = 11;</code>
       */
      public Builder addAllTimerValue(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureTimerValueIsMutable();
        super.addAll(values, timerValue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float timer_value = 11;</code>
       */
      public Builder clearTimerValue() {
        timerValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // repeated uint32 timer_tag_count = 12;
      private java.util.List<java.lang.Integer> timerTagCount_ = java.util.Collections.emptyList();
      private void ensureTimerTagCountIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          timerTagCount_ = new java.util.ArrayList<java.lang.Integer>(timerTagCount_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated uint32 timer_tag_count = 12;</code>
       */
      public java.util.List<java.lang.Integer>
          getTimerTagCountList() {
        return java.util.Collections.unmodifiableList(timerTagCount_);
      }
      /**
       * <code>repeated uint32 timer_tag_count = 12;</code>
       */
      public int getTimerTagCountCount() {
        return timerTagCount_.size();
      }
      /**
       * <code>repeated uint32 timer_tag_count = 12;</code>
       */
      public int getTimerTagCount(int index) {
        return timerTagCount_.get(index);
      }
      /**
       * <code>repeated uint32 timer_tag_count = 12;</code>
       */
      public Builder setTimerTagCount(
          int index, int value) {
        ensureTimerTagCountIsMutable();
        timerTagCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 timer_tag_count = 12;</code>
       */
      public Builder addTimerTagCount(int value) {
        ensureTimerTagCountIsMutable();
        timerTagCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 timer_tag_count = 12;</code>
       */
      public Builder addAllTimerTagCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTimerTagCountIsMutable();
        super.addAll(values, timerTagCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 timer_tag_count = 12;</code>
       */
      public Builder clearTimerTagCount() {
        timerTagCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // repeated uint32 timer_tag_name = 13;
      private java.util.List<java.lang.Integer> timerTagName_ = java.util.Collections.emptyList();
      private void ensureTimerTagNameIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          timerTagName_ = new java.util.ArrayList<java.lang.Integer>(timerTagName_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated uint32 timer_tag_name = 13;</code>
       */
      public java.util.List<java.lang.Integer>
          getTimerTagNameList() {
        return java.util.Collections.unmodifiableList(timerTagName_);
      }
      /**
       * <code>repeated uint32 timer_tag_name = 13;</code>
       */
      public int getTimerTagNameCount() {
        return timerTagName_.size();
      }
      /**
       * <code>repeated uint32 timer_tag_name = 13;</code>
       */
      public int getTimerTagName(int index) {
        return timerTagName_.get(index);
      }
      /**
       * <code>repeated uint32 timer_tag_name = 13;</code>
       */
      public Builder setTimerTagName(
          int index, int value) {
        ensureTimerTagNameIsMutable();
        timerTagName_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 timer_tag_name = 13;</code>
       */
      public Builder addTimerTagName(int value) {
        ensureTimerTagNameIsMutable();
        timerTagName_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 timer_tag_name = 13;</code>
       */
      public Builder addAllTimerTagName(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTimerTagNameIsMutable();
        super.addAll(values, timerTagName_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 timer_tag_name = 13;</code>
       */
      public Builder clearTimerTagName() {
        timerTagName_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // repeated uint32 timer_tag_value = 14;
      private java.util.List<java.lang.Integer> timerTagValue_ = java.util.Collections.emptyList();
      private void ensureTimerTagValueIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          timerTagValue_ = new java.util.ArrayList<java.lang.Integer>(timerTagValue_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated uint32 timer_tag_value = 14;</code>
       */
      public java.util.List<java.lang.Integer>
          getTimerTagValueList() {
        return java.util.Collections.unmodifiableList(timerTagValue_);
      }
      /**
       * <code>repeated uint32 timer_tag_value = 14;</code>
       */
      public int getTimerTagValueCount() {
        return timerTagValue_.size();
      }
      /**
       * <code>repeated uint32 timer_tag_value = 14;</code>
       */
      public int getTimerTagValue(int index) {
        return timerTagValue_.get(index);
      }
      /**
       * <code>repeated uint32 timer_tag_value = 14;</code>
       */
      public Builder setTimerTagValue(
          int index, int value) {
        ensureTimerTagValueIsMutable();
        timerTagValue_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 timer_tag_value = 14;</code>
       */
      public Builder addTimerTagValue(int value) {
        ensureTimerTagValueIsMutable();
        timerTagValue_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 timer_tag_value = 14;</code>
       */
      public Builder addAllTimerTagValue(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTimerTagValueIsMutable();
        super.addAll(values, timerTagValue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 timer_tag_value = 14;</code>
       */
      public Builder clearTimerTagValue() {
        timerTagValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // repeated string dictionary = 15;
      private com.google.protobuf.LazyStringList dictionary_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureDictionaryIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          dictionary_ = new com.google.protobuf.LazyStringArrayList(dictionary_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated string dictionary = 15;</code>
       */
      public java.util.List<java.lang.String>
          getDictionaryList() {
        return java.util.Collections.unmodifiableList(dictionary_);
      }
      /**
       * <code>repeated string dictionary = 15;</code>
       */
      public int getDictionaryCount() {
        return dictionary_.size();
      }
      /**
       * <code>repeated string dictionary = 15;</code>
       */
      public java.lang.String getDictionary(int index) {
        return dictionary_.get(index);
      }
      /**
       * <code>repeated string dictionary = 15;</code>
       */
      public com.google.protobuf.ByteString
          getDictionaryBytes(int index) {
        return dictionary_.getByteString(index);
      }
      /**
       * <code>repeated string dictionary = 15;</code>
       */
      public Builder setDictionary(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDictionaryIsMutable();
        dictionary_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string dictionary = 15;</code>
       */
      public Builder addDictionary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDictionaryIsMutable();
        dictionary_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string dictionary = 15;</code>
       */
      public Builder addAllDictionary(
          java.lang.Iterable<java.lang.String> values) {
        ensureDictionaryIsMutable();
        super.addAll(values, dictionary_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string dictionary = 15;</code>
       */
      public Builder clearDictionary() {
        dictionary_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string dictionary = 15;</code>
       */
      public Builder addDictionaryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDictionaryIsMutable();
        dictionary_.add(value);
        onChanged();
        return this;
      }

      // optional uint32 status = 16;
      private int status_ ;
      /**
       * <code>optional uint32 status = 16;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint32 status = 16;</code>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional uint32 status = 16;</code>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00008000;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 status = 16;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00008000);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 memory_footprint = 17;
      private int memoryFootprint_ ;
      /**
       * <code>optional uint32 memory_footprint = 17;</code>
       */
      public boolean hasMemoryFootprint() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 memory_footprint = 17;</code>
       */
      public int getMemoryFootprint() {
        return memoryFootprint_;
      }
      /**
       * <code>optional uint32 memory_footprint = 17;</code>
       */
      public Builder setMemoryFootprint(int value) {
        bitField0_ |= 0x00010000;
        memoryFootprint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 memory_footprint = 17;</code>
       */
      public Builder clearMemoryFootprint() {
        bitField0_ = (bitField0_ & ~0x00010000);
        memoryFootprint_ = 0;
        onChanged();
        return this;
      }

      // repeated .jpinba.RequestBody requests = 18;
      private java.util.List<org.krash.jpinba.request.PinbaRequest.RequestBody> requests_ =
        java.util.Collections.emptyList();
      private void ensureRequestsIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          requests_ = new java.util.ArrayList<org.krash.jpinba.request.PinbaRequest.RequestBody>(requests_);
          bitField0_ |= 0x00020000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.krash.jpinba.request.PinbaRequest.RequestBody, org.krash.jpinba.request.PinbaRequest.RequestBody.Builder, org.krash.jpinba.request.PinbaRequest.RequestBodyOrBuilder> requestsBuilder_;

      /**
       * <code>repeated .jpinba.RequestBody requests = 18;</code>
       */
      public java.util.List<org.krash.jpinba.request.PinbaRequest.RequestBody> getRequestsList() {
        if (requestsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(requests_);
        } else {
          return requestsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .jpinba.RequestBody requests = 18;</code>
       */
      public int getRequestsCount() {
        if (requestsBuilder_ == null) {
          return requests_.size();
        } else {
          return requestsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .jpinba.RequestBody requests = 18;</code>
       */
      public org.krash.jpinba.request.PinbaRequest.RequestBody getRequests(int index) {
        if (requestsBuilder_ == null) {
          return requests_.get(index);
        } else {
          return requestsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .jpinba.RequestBody requests = 18;</code>
       */
      public Builder setRequests(
          int index, org.krash.jpinba.request.PinbaRequest.RequestBody value) {
        if (requestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRequestsIsMutable();
          requests_.set(index, value);
          onChanged();
        } else {
          requestsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .jpinba.RequestBody requests = 18;</code>
       */
      public Builder setRequests(
          int index, org.krash.jpinba.request.PinbaRequest.RequestBody.Builder builderForValue) {
        if (requestsBuilder_ == null) {
          ensureRequestsIsMutable();
          requests_.set(index, builderForValue.build());
          onChanged();
        } else {
          requestsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jpinba.RequestBody requests = 18;</code>
       */
      public Builder addRequests(org.krash.jpinba.request.PinbaRequest.RequestBody value) {
        if (requestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRequestsIsMutable();
          requests_.add(value);
          onChanged();
        } else {
          requestsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .jpinba.RequestBody requests = 18;</code>
       */
      public Builder addRequests(
          int index, org.krash.jpinba.request.PinbaRequest.RequestBody value) {
        if (requestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRequestsIsMutable();
          requests_.add(index, value);
          onChanged();
        } else {
          requestsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .jpinba.RequestBody requests = 18;</code>
       */
      public Builder addRequests(
          org.krash.jpinba.request.PinbaRequest.RequestBody.Builder builderForValue) {
        if (requestsBuilder_ == null) {
          ensureRequestsIsMutable();
          requests_.add(builderForValue.build());
          onChanged();
        } else {
          requestsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jpinba.RequestBody requests = 18;</code>
       */
      public Builder addRequests(
          int index, org.krash.jpinba.request.PinbaRequest.RequestBody.Builder builderForValue) {
        if (requestsBuilder_ == null) {
          ensureRequestsIsMutable();
          requests_.add(index, builderForValue.build());
          onChanged();
        } else {
          requestsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .jpinba.RequestBody requests = 18;</code>
       */
      public Builder addAllRequests(
          java.lang.Iterable<? extends org.krash.jpinba.request.PinbaRequest.RequestBody> values) {
        if (requestsBuilder_ == null) {
          ensureRequestsIsMutable();
          super.addAll(values, requests_);
          onChanged();
        } else {
          requestsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .jpinba.RequestBody requests = 18;</code>
       */
      public Builder clearRequests() {
        if (requestsBuilder_ == null) {
          requests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
          onChanged();
        } else {
          requestsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .jpinba.RequestBody requests = 18;</code>
       */
      public Builder removeRequests(int index) {
        if (requestsBuilder_ == null) {
          ensureRequestsIsMutable();
          requests_.remove(index);
          onChanged();
        } else {
          requestsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .jpinba.RequestBody requests = 18;</code>
       */
      public org.krash.jpinba.request.PinbaRequest.RequestBody.Builder getRequestsBuilder(
          int index) {
        return getRequestsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .jpinba.RequestBody requests = 18;</code>
       */
      public org.krash.jpinba.request.PinbaRequest.RequestBodyOrBuilder getRequestsOrBuilder(
          int index) {
        if (requestsBuilder_ == null) {
          return requests_.get(index);  } else {
          return requestsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .jpinba.RequestBody requests = 18;</code>
       */
      public java.util.List<? extends org.krash.jpinba.request.PinbaRequest.RequestBodyOrBuilder> 
           getRequestsOrBuilderList() {
        if (requestsBuilder_ != null) {
          return requestsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(requests_);
        }
      }
      /**
       * <code>repeated .jpinba.RequestBody requests = 18;</code>
       */
      public org.krash.jpinba.request.PinbaRequest.RequestBody.Builder addRequestsBuilder() {
        return getRequestsFieldBuilder().addBuilder(
            org.krash.jpinba.request.PinbaRequest.RequestBody.getDefaultInstance());
      }
      /**
       * <code>repeated .jpinba.RequestBody requests = 18;</code>
       */
      public org.krash.jpinba.request.PinbaRequest.RequestBody.Builder addRequestsBuilder(
          int index) {
        return getRequestsFieldBuilder().addBuilder(
            index, org.krash.jpinba.request.PinbaRequest.RequestBody.getDefaultInstance());
      }
      /**
       * <code>repeated .jpinba.RequestBody requests = 18;</code>
       */
      public java.util.List<org.krash.jpinba.request.PinbaRequest.RequestBody.Builder> 
           getRequestsBuilderList() {
        return getRequestsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.krash.jpinba.request.PinbaRequest.RequestBody, org.krash.jpinba.request.PinbaRequest.RequestBody.Builder, org.krash.jpinba.request.PinbaRequest.RequestBodyOrBuilder> 
          getRequestsFieldBuilder() {
        if (requestsBuilder_ == null) {
          requestsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.krash.jpinba.request.PinbaRequest.RequestBody, org.krash.jpinba.request.PinbaRequest.RequestBody.Builder, org.krash.jpinba.request.PinbaRequest.RequestBodyOrBuilder>(
                  requests_,
                  ((bitField0_ & 0x00020000) == 0x00020000),
                  getParentForChildren(),
                  isClean());
          requests_ = null;
        }
        return requestsBuilder_;
      }

      // optional string schema = 19;
      private java.lang.Object schema_ = "";
      /**
       * <code>optional string schema = 19;</code>
       */
      public boolean hasSchema() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional string schema = 19;</code>
       */
      public java.lang.String getSchema() {
        java.lang.Object ref = schema_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          schema_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string schema = 19;</code>
       */
      public com.google.protobuf.ByteString
          getSchemaBytes() {
        java.lang.Object ref = schema_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          schema_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string schema = 19;</code>
       */
      public Builder setSchema(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        schema_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string schema = 19;</code>
       */
      public Builder clearSchema() {
        bitField0_ = (bitField0_ & ~0x00040000);
        schema_ = getDefaultInstance().getSchema();
        onChanged();
        return this;
      }
      /**
       * <code>optional string schema = 19;</code>
       */
      public Builder setSchemaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        schema_ = value;
        onChanged();
        return this;
      }

      // repeated uint32 tag_name = 20;
      private java.util.List<java.lang.Integer> tagName_ = java.util.Collections.emptyList();
      private void ensureTagNameIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          tagName_ = new java.util.ArrayList<java.lang.Integer>(tagName_);
          bitField0_ |= 0x00080000;
         }
      }
      /**
       * <code>repeated uint32 tag_name = 20;</code>
       */
      public java.util.List<java.lang.Integer>
          getTagNameList() {
        return java.util.Collections.unmodifiableList(tagName_);
      }
      /**
       * <code>repeated uint32 tag_name = 20;</code>
       */
      public int getTagNameCount() {
        return tagName_.size();
      }
      /**
       * <code>repeated uint32 tag_name = 20;</code>
       */
      public int getTagName(int index) {
        return tagName_.get(index);
      }
      /**
       * <code>repeated uint32 tag_name = 20;</code>
       */
      public Builder setTagName(
          int index, int value) {
        ensureTagNameIsMutable();
        tagName_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 tag_name = 20;</code>
       */
      public Builder addTagName(int value) {
        ensureTagNameIsMutable();
        tagName_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 tag_name = 20;</code>
       */
      public Builder addAllTagName(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTagNameIsMutable();
        super.addAll(values, tagName_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 tag_name = 20;</code>
       */
      public Builder clearTagName() {
        tagName_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00080000);
        onChanged();
        return this;
      }

      // repeated uint32 tag_value = 21;
      private java.util.List<java.lang.Integer> tagValue_ = java.util.Collections.emptyList();
      private void ensureTagValueIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          tagValue_ = new java.util.ArrayList<java.lang.Integer>(tagValue_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated uint32 tag_value = 21;</code>
       */
      public java.util.List<java.lang.Integer>
          getTagValueList() {
        return java.util.Collections.unmodifiableList(tagValue_);
      }
      /**
       * <code>repeated uint32 tag_value = 21;</code>
       */
      public int getTagValueCount() {
        return tagValue_.size();
      }
      /**
       * <code>repeated uint32 tag_value = 21;</code>
       */
      public int getTagValue(int index) {
        return tagValue_.get(index);
      }
      /**
       * <code>repeated uint32 tag_value = 21;</code>
       */
      public Builder setTagValue(
          int index, int value) {
        ensureTagValueIsMutable();
        tagValue_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 tag_value = 21;</code>
       */
      public Builder addTagValue(int value) {
        ensureTagValueIsMutable();
        tagValue_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 tag_value = 21;</code>
       */
      public Builder addAllTagValue(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTagValueIsMutable();
        super.addAll(values, tagValue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 tag_value = 21;</code>
       */
      public Builder clearTagValue() {
        tagValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }

      // repeated float timer_ru_utime = 22;
      private java.util.List<java.lang.Float> timerRuUtime_ = java.util.Collections.emptyList();
      private void ensureTimerRuUtimeIsMutable() {
        if (!((bitField0_ & 0x00200000) == 0x00200000)) {
          timerRuUtime_ = new java.util.ArrayList<java.lang.Float>(timerRuUtime_);
          bitField0_ |= 0x00200000;
         }
      }
      /**
       * <code>repeated float timer_ru_utime = 22;</code>
       */
      public java.util.List<java.lang.Float>
          getTimerRuUtimeList() {
        return java.util.Collections.unmodifiableList(timerRuUtime_);
      }
      /**
       * <code>repeated float timer_ru_utime = 22;</code>
       */
      public int getTimerRuUtimeCount() {
        return timerRuUtime_.size();
      }
      /**
       * <code>repeated float timer_ru_utime = 22;</code>
       */
      public float getTimerRuUtime(int index) {
        return timerRuUtime_.get(index);
      }
      /**
       * <code>repeated float timer_ru_utime = 22;</code>
       */
      public Builder setTimerRuUtime(
          int index, float value) {
        ensureTimerRuUtimeIsMutable();
        timerRuUtime_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float timer_ru_utime = 22;</code>
       */
      public Builder addTimerRuUtime(float value) {
        ensureTimerRuUtimeIsMutable();
        timerRuUtime_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float timer_ru_utime = 22;</code>
       */
      public Builder addAllTimerRuUtime(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureTimerRuUtimeIsMutable();
        super.addAll(values, timerRuUtime_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float timer_ru_utime = 22;</code>
       */
      public Builder clearTimerRuUtime() {
        timerRuUtime_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00200000);
        onChanged();
        return this;
      }

      // repeated float timer_ru_stime = 23;
      private java.util.List<java.lang.Float> timerRuStime_ = java.util.Collections.emptyList();
      private void ensureTimerRuStimeIsMutable() {
        if (!((bitField0_ & 0x00400000) == 0x00400000)) {
          timerRuStime_ = new java.util.ArrayList<java.lang.Float>(timerRuStime_);
          bitField0_ |= 0x00400000;
         }
      }
      /**
       * <code>repeated float timer_ru_stime = 23;</code>
       */
      public java.util.List<java.lang.Float>
          getTimerRuStimeList() {
        return java.util.Collections.unmodifiableList(timerRuStime_);
      }
      /**
       * <code>repeated float timer_ru_stime = 23;</code>
       */
      public int getTimerRuStimeCount() {
        return timerRuStime_.size();
      }
      /**
       * <code>repeated float timer_ru_stime = 23;</code>
       */
      public float getTimerRuStime(int index) {
        return timerRuStime_.get(index);
      }
      /**
       * <code>repeated float timer_ru_stime = 23;</code>
       */
      public Builder setTimerRuStime(
          int index, float value) {
        ensureTimerRuStimeIsMutable();
        timerRuStime_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float timer_ru_stime = 23;</code>
       */
      public Builder addTimerRuStime(float value) {
        ensureTimerRuStimeIsMutable();
        timerRuStime_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float timer_ru_stime = 23;</code>
       */
      public Builder addAllTimerRuStime(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureTimerRuStimeIsMutable();
        super.addAll(values, timerRuStime_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float timer_ru_stime = 23;</code>
       */
      public Builder clearTimerRuStime() {
        timerRuStime_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:jpinba.RequestBody)
    }

    static {
      defaultInstance = new RequestBody(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:jpinba.RequestBody)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_jpinba_RequestBody_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_jpinba_RequestBody_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014jpinba.proto\022\006jpinba\"\210\004\n\013RequestBody\022\020" +
      "\n\010hostname\030\001 \002(\t\022\023\n\013server_name\030\002 \002(\t\022\023\n" +
      "\013script_name\030\003 \002(\t\022\025\n\rrequest_count\030\004 \002(" +
      "\r\022\025\n\rdocument_size\030\005 \002(\r\022\023\n\013memory_peak\030" +
      "\006 \002(\r\022\024\n\014request_time\030\007 \002(\002\022\020\n\010ru_utime\030" +
      "\010 \002(\002\022\020\n\010ru_stime\030\t \002(\002\022\027\n\017timer_hit_cou" +
      "nt\030\n \003(\r\022\023\n\013timer_value\030\013 \003(\002\022\027\n\017timer_t" +
      "ag_count\030\014 \003(\r\022\026\n\016timer_tag_name\030\r \003(\r\022\027" +
      "\n\017timer_tag_value\030\016 \003(\r\022\022\n\ndictionary\030\017 " +
      "\003(\t\022\016\n\006status\030\020 \001(\r\022\030\n\020memory_footprint\030",
      "\021 \001(\r\022%\n\010requests\030\022 \003(\0132\023.jpinba.Request" +
      "Body\022\016\n\006schema\030\023 \001(\t\022\020\n\010tag_name\030\024 \003(\r\022\021" +
      "\n\ttag_value\030\025 \003(\r\022\026\n\016timer_ru_utime\030\026 \003(" +
      "\002\022\026\n\016timer_ru_stime\030\027 \003(\002B(\n\030org.krash.j" +
      "pinba.requestB\014PinbaRequest"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_jpinba_RequestBody_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_jpinba_RequestBody_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_jpinba_RequestBody_descriptor,
              new java.lang.String[] { "Hostname", "ServerName", "ScriptName", "RequestCount", "DocumentSize", "MemoryPeak", "RequestTime", "RuUtime", "RuStime", "TimerHitCount", "TimerValue", "TimerTagCount", "TimerTagName", "TimerTagValue", "Dictionary", "Status", "MemoryFootprint", "Requests", "Schema", "TagName", "TagValue", "TimerRuUtime", "TimerRuStime", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
